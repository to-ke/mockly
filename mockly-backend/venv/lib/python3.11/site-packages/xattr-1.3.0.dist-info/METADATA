Metadata-Version: 2.4
Name: xattr
Version: 1.3.0
Summary: Python wrapper for extended filesystem attributes
Author-email: Bob Ippolito <bob@redivi.com>
Maintainer-email: Bob Ippolito <bob@redivi.com>
License-Expression: MIT
Project-URL: Homepage, https://github.com/xattr/xattr
Project-URL: Repository, https://github.com/xattr/xattr
Keywords: xattr
Platform: MacOS X
Platform: Linux
Platform: FreeBSD
Platform: Solaris
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: POSIX :: BSD :: FreeBSD
Classifier: Operating System :: POSIX :: SunOS/Solaris
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.9
Description-Content-Type: text/x-rst
License-File: LICENSE.txt
Requires-Dist: cffi>=1.16.0
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Dynamic: license-file
Dynamic: platform

xattr
-----

xattr is a Python wrapper for extended filesystem attributes.

xattr also ships with an `xattr` command line tool for viewing and
editing extended filesystem attributes. On platforms that support or
ship with the attr package, you may prefer to use the `getfattr`
and `setfattr` command line tools from the attr package.

Extended attributes extend the basic attributes of files and directories
in the file system.  They are stored as name:data pairs associated with
file system objects (files, directories, symlinks, etc).

Extended attributes are currently only available on Darwin 8.0+ (Mac OS X 10.4)
and Linux 2.6+. Experimental support is included for Solaris and FreeBSD.

Python 3.9+ is required as of v1.3.0.

Versions older than v1.0.0 are no longer supported, but are
available for use. v0.10.1 is the last version to support older versions
of Python (including 2.7).

Note: On Linux, custom xattr keys need to be prefixed with the `user`
namespace, ie: `user.your_attr`.

Note: If you need to read or write Spotlight metadata attributes on macOS,
see osxmetadata_ which provides a native macOS means to do so without
directly manipulating extended attributes. osxmetadata also provides access
to other macOS metadata attributes and extended attributes via xattr.

.. _osxmetadata: https://github.com/RhetTbull/osxmetadata
